import telebot
import random
import json
import os

TOKEN = "8148374493:AAGDwlyGPjH03GzeD2dTjxnVwrKNl2QTVOw"
bot = telebot.TeleBot(TOKEN)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
EXPLORERS_FILE = 'explorers.json'

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def load_explorers():
    try:
        with open(EXPLORERS_FILE, 'r', encoding='utf-8') as file:
            return json.load(file)
    except FileNotFoundError:
        return {}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
explorers = load_explorers()
user_states = {}

def send_photo_safe(chat_id, image_path, caption=None, reply_markup=None):
    try:
        with open(image_path, 'rb') as photo:
            bot.send_photo(
                chat_id,
                photo,
                caption=caption,
                reply_markup=reply_markup
            )
        return True
    except Exception as e:
        print(f"Error sending image {image_path}: {e}")
        if caption:
            bot.send_message(chat_id, caption, reply_markup=reply_markup)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def create_reply_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row("üìö –°–ø–∏—Å–æ–∫ –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª–µ–π", "‚ùì –ü—Ä–æ–≤–µ—Ä—å —Å–µ–±—è")
    keyboard.row("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    return keyboard

def create_main_keyboard():
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        telebot.types.InlineKeyboardButton("üìö –°–ø–∏—Å–æ–∫ –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª–µ–π", callback_data="show_list"),
        telebot.types.InlineKeyboardButton("‚ùì –ü—Ä–æ–≤–µ—Ä—å —Å–µ–±—è", callback_data="quiz")
    )
    return keyboard

def create_explorer_keyboard(explorer_id):
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        telebot.types.InlineKeyboardButton("üó∫ –ú–∞—Ä—à—Ä—É—Ç", callback_data=f"route_{explorer_id}")
    )
    keyboard.add(
        telebot.types.InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    return keyboard

def create_keyboard():
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        telebot.types.InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id
    user_states[chat_id] = "1"
    welcome_text = """
    üåä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –≤–µ–ª–∏–∫–∏—Ö –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª–µ–π!
    üö¢ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    üìö –°–ø–∏—Å–æ–∫ –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª–µ–π - –∏–∑—É—á–∏—Ç–µ –≤–µ–ª–∏–∫–∏—Ö –ø–µ—Ä–≤–æ–æ—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª–µ–π
    ‚ùì –ü—Ä–æ–≤–µ—Ä—å —Å–µ–±—è - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è
    """
    bot.send_message(
        chat_id,
        welcome_text,
        reply_markup=create_main_keyboard()
    )
    bot.send_message(
        chat_id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=create_reply_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == "üìö –°–ø–∏—Å–æ–∫ –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª–µ–π":
        show_explorers_list(message)
    elif message.text == "‚ùì –ü—Ä–æ–≤–µ—Ä—å —Å–µ–±—è":
        start_quiz(message)
    elif message.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        show_main_menu(message)

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    chat_id = call.message.chat.id
    current_explorer = user_states.get(chat_id, "1")
    if call.data == "show_list":
        show_explorers_list(call.message)
    elif call.data == "quiz":
        start_quiz(call.message)
    elif call.data.startswith("select_"):
        explorer_id = call.data.split("_")[1]
        user_states[chat_id] = explorer_id
        show_explorer_info(call.message)
    elif call.data.startswith("route_"):
        explorer_id = call.data.split("_")[1]
        user_states[chat_id] = explorer_id
        show_route(call.message)
    elif call.data == "main_menu":
        show_main_menu(call.message)
    elif call.data.startswith("quiz_"):
        handle_quiz_answer(call)
    try:
        bot.edit_message_reply_markup(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=None
        )
    except:
        pass

def show_main_menu(message):
    welcome_text = """
    üåä –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    üö¢ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    üìö –°–ø–∏—Å–æ–∫ –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª–µ–π - –∏–∑—É—á–∏—Ç–µ –≤–µ–ª–∏–∫–∏—Ö –ø–µ—Ä–≤–æ–æ—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª–µ–π
    ‚ùì –ü—Ä–æ–≤–µ—Ä—å —Å–µ–±—è - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è
    """
    bot.send_message(
        message.chat.id,
        welcome_text,
        reply_markup=create_main_keyboard()
    )
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=create_reply_keyboard()
    )

def show_explorers_list(message):
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    for id, explorer in explorers.items():
        keyboard.add(telebot.types.InlineKeyboardButton(
            f"{explorer['name']} ({explorer['years']})",
            callback_data=f"select_{id}"
        ))
    keyboard.add(telebot.types.InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    bot.send_message(
        message.chat.id,
        "üìö –í—ã–±–µ—Ä–∏—Ç–µ –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª—è:",
        reply_markup=keyboard
    )

def show_explorer_info(message):
    explorer_id = user_states.get(message.chat.id, "1")
    explorer = explorers[explorer_id]
    caption = f"""
    üìö {explorer['name']}
    –ì–æ–¥—ã –∂–∏–∑–Ω–∏: {explorer['years']}
    {explorer['bio']}
    """
    send_photo_safe(message.chat.id, explorer['image'], caption, create_explorer_keyboard(explorer_id))

def show_route(message):
    explorer_id = user_states.get(message.chat.id, "1")
    explorer = explorers[explorer_id]
    if explorer['route'] != "–Ω–µ—Ç":
        send_photo_safe(message.chat.id, explorer['route'], "–ú–∞—Ä—à—Ä—É—Ç", create_keyboard())
    else:
        bot.send_message(message.chat.id, "–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω.", reply_markup=create_keyboard())


def start_quiz(message):
    explorer_id = random.choice(list(explorers.keys()))
    explorer = explorers[explorer_id]
    caption = f"‚ùì –û –∫–∞–∫–æ–º –º–æ—Ä–µ–ø–ª–∞–≤–∞—Ç–µ–ª–µ –∏–¥–µ—Ç —Ä–µ—á—å?\n\n{explorer['bio']}"
    send_photo_safe(message.chat.id, explorer['image'], caption)

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –≤–∫–ª—é—á–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    options = [explorer]
    while len(options) < 3:
        option = random.choice(list(explorers.values()))
        if option not in options:
            options.append(option)

    # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
    random.shuffle(options)

    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    for option in options:
        keyboard.add(telebot.types.InlineKeyboardButton(
            option['name'],
            callback_data=f"quiz_{option['name'] == explorer['name']}"
        ))
    keyboard.add(telebot.types.InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:",
        reply_markup=keyboard
    )
def handle_quiz_answer(call):
    is_correct = call.data.split("_")[1] == "True"
    if is_correct:
        text = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü!"
    else:
        text = "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!"
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        telebot.types.InlineKeyboardButton("üîÑ –ï—â—ë –≤–æ–ø—Ä–æ—Å", callback_data="quiz")
    )
    keyboard.add(telebot.types.InlineKeyboardButton("‚óÄÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    bot.send_message(
        call.message.chat.id,
        text,
        reply_markup=keyboard
    )

if __name__ == "__main__":
    bot.polling(none_stop=True)
